@mixin clearfix() {
    &:after, &:before {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@function str-replace($string, $search, $replace: '') {
	$index: str-index( $string, $search );

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@function list-remove($list, $index) {
	$newList: ();
	@for $i from 1 through length($list) {
		@if $i != $index {
			$newList: append($newList, nth($list,$i), 'space');
		}
	}
	@return $newList;
}

@mixin media( $args... ) {

	$media-queries : '';

	@each $arg in $args {

		$found : false;

		@each $name, $value in $breakpoints {

			@if str-index( $arg, $name ) and str-index( $arg, $name + '-' ) == null {

				$found : true;

				@if str-index( $arg, 'max' ) {
					$value : $value - 1px;
				}

				$breakpoint : str-replace( $arg, $name, $value );

				$media-queries : append( $media-queries, $breakpoint, $separator : comma );
			}
		}

		@if $found == false {
			$media-queries : append( $media-queries, $arg, $separator : comma );
		}

	}

	$media-queries : list-remove( $media-queries, 1 );

	$query-string : '';

	@each $media-query in $media-queries {
		$query-string : $query-string + ' and (' + $media-query + ')'
	}

	@media only screen#{$query-string} {
		@content;
	}
}

@mixin invisible() {
    clip: rect(0px, 0px, 0px, 0px);
    -webkit-clip-path: rect( 0px 0px, 0px 0px, 0px 0px, 0px 0px);
    clip-path: rect( 0px 0px, 0px 0px, 0px 0px, 0px 0px);
    position: absolute !important;
    height: 1px;
    width: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
    font-size: 0;
    overflow: hidden;
}



